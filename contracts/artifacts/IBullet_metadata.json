{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "title",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "description",
						"type": "bytes"
					},
					{
						"internalType": "uint256",
						"name": "subscriptionPrice",
						"type": "uint256"
					}
				],
				"name": "createChannel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "getAfter",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "getBefore",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "size",
						"type": "uint8"
					}
				],
				"name": "getLatest",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyChannels",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					}
				],
				"name": "getPost",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IBullet.sol": "IBullet"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Channel.sol": {
			"keccak256": "0x3a5fc0130450f2f44e050c1c1a55fbc343e28a602fa954448214c9208df7f34b",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://c4f26ebf05c44e7d6fdf2acd2cb9a8f6313e5fc74df57f6b2c76a5f67a148d5e",
				"dweb:/ipfs/QmandEcR7rWSRqPF4ejRDgY81AkrrZsDQJAyXzGX3fjQvH"
			]
		},
		"contracts/IBullet.sol": {
			"keccak256": "0x256faef157fd47b12fc4928ef4f786e4e55f8d3aae91c1098c591afd187011ff",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://70ae7e92d6465c01a51f89028b0c70a10e66de9edc9bed1984214819b928e0c1",
				"dweb:/ipfs/QmVFJvJ56UciyLAgfxrWQr3YvHb7QoKLv3m992KTs1oLqE"
			]
		},
		"contracts/IGetPosts.sol": {
			"keccak256": "0x7a27683c571dee39e5c0025d5e117a9f8f50434cc8aa12af17cb026c1537d182",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://87774707994bcc967a85c0d4eaaa64940df45f89db14221391d596c2ccae00c1",
				"dweb:/ipfs/Qma2NGTcjydzUbED7t4YwravGcikb3wU2eWjQYgUWjMQAT"
			]
		},
		"contracts/Post.sol": {
			"keccak256": "0x3d6694c16019973894c216ef9a6112d8488fe44be9d70c0e6f342f132df910b9",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://11ff0ea5c51fa4127bcbfdb021f1d9a6091b2b1f5c24cf53513e5545dddc873d",
				"dweb:/ipfs/QmZMmdRzy8r2yobG51d2YDYjaKmBftaS3e19FvV7Dr4ETQ"
			]
		},
		"contracts/Role.sol": {
			"keccak256": "0x558167e3f45db8c715d04de00643ed0e8d2665be943d1e06faf1e1ada69d2317",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://281e33e95f55b13b98962f53b5c8d739d9b82698eb0cd39986ec74768a0bf044",
				"dweb:/ipfs/QmZ5DhWfqJQmfaHZpdEwwhqaMgy136xoe8xeWyoBYhys2J"
			]
		}
	},
	"version": 1
}