{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "channelAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "addChannelToUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "getAfter",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "getBefore",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "size",
						"type": "uint8"
					}
				],
				"name": "getLatest",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "postId",
						"type": "uint256"
					}
				],
				"name": "getPost",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "indexes",
						"type": "uint256[]"
					}
				],
				"name": "getPosts",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "globalIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "postIndexInChannel",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "major",
								"type": "uint8"
							},
							{
								"internalType": "uint8",
								"name": "minor",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "timestamp",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "content",
								"type": "bytes"
							},
							{
								"internalType": "bytes8",
								"name": "encoding",
								"type": "bytes8"
							},
							{
								"internalType": "address",
								"name": "channelAddress",
								"type": "address"
							}
						],
						"internalType": "struct Post[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "getUserChannels",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_content",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "_channelAddress",
						"type": "address"
					},
					{
						"internalType": "bytes8",
						"name": "_encoding",
						"type": "bytes8"
					},
					{
						"internalType": "uint256",
						"name": "indexInChannel",
						"type": "uint256"
					}
				],
				"name": "savePost",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractAdddress",
						"type": "address"
					}
				],
				"name": "setTrusted",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IStorage.sol": "IStorage"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IGetPosts.sol": {
			"keccak256": "0x7a27683c571dee39e5c0025d5e117a9f8f50434cc8aa12af17cb026c1537d182",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://87774707994bcc967a85c0d4eaaa64940df45f89db14221391d596c2ccae00c1",
				"dweb:/ipfs/Qma2NGTcjydzUbED7t4YwravGcikb3wU2eWjQYgUWjMQAT"
			]
		},
		"contracts/IStorage.sol": {
			"keccak256": "0xf8b9e63c9b10d74325738a1a8191e46c02c9a3ed4af40026ef6d209d15394582",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://902a04fcd9fb24fded0269ebc12d285c92027f4e450e731953f8f0ecde4761ae",
				"dweb:/ipfs/QmNcV1iE4B3Lp99xgBxef869bfEKiByqjr8BKCpy8uDhcL"
			]
		},
		"contracts/Post.sol": {
			"keccak256": "0x3d6694c16019973894c216ef9a6112d8488fe44be9d70c0e6f342f132df910b9",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://11ff0ea5c51fa4127bcbfdb021f1d9a6091b2b1f5c24cf53513e5545dddc873d",
				"dweb:/ipfs/QmZMmdRzy8r2yobG51d2YDYjaKmBftaS3e19FvV7Dr4ETQ"
			]
		},
		"contracts/Role.sol": {
			"keccak256": "0x558167e3f45db8c715d04de00643ed0e8d2665be943d1e06faf1e1ada69d2317",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://281e33e95f55b13b98962f53b5c8d739d9b82698eb0cd39986ec74768a0bf044",
				"dweb:/ipfs/QmZ5DhWfqJQmfaHZpdEwwhqaMgy136xoe8xeWyoBYhys2J"
			]
		}
	},
	"version": 1
}